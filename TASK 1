import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("/content/train.csv")  

print(df.head())


features = ["GrLivArea", "BedroomAbvGr", "FullBath"]
target = "SalePrice"

X = df[features]
y = df[target]

X = X.fillna(X.mean()) 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Model Performance:")
print("Mean Squared Error (MSE): {:.2f}".format(mse))
print("R-squared (R2 Score): {:.2f}".format(r2))

print("\nModel Coefficients:")
coefficients = pd.DataFrame({
    "Feature": features,
    "Coefficient": model.coef_
})
print(coefficients.to_string(index=False))

sample_input = [[2000, 3, 2]]
predicted_price = model.predict(sample_input)
print("\nPredicted Price for {}: ${:,.2f}".format(sample_input, predicted_price[0]))

